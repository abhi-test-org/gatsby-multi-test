exports.createSchemaCustomization = ({ actions }) => {
  actions.createTypes(`
    interface Product @nodeInterface {
      id: ID!
      name: String!
      slug: String!
      description: String
      photo: File
      categories: [Category]!
      source: String!
    }

    interface Category @nodeInterface {
      id: ID!
      name: String!
      slug: String!
      source: String!

      # should be autogenerated - either via source plugin or via custom resolver
      # should NOT actually be in source content model/type
      products: [Product]!
    }
  `);
};

exports.createPages = async ({ actions, graphql, reporter }) => {
  const { data, errors } = await graphql(`
    {
      allCategory {
        nodes {
          id
          slug
        }
      }
      allProduct {
        nodes {
          id
          slug
        }
      }
    }
  `);

  if (!data || (errors && errors.length > 0)) {
    reporter.panic(`No beuno`, errors);
  }

  data.allCategory.nodes.forEach((category) => {
    actions.createPage({
      path: category.slug,
      component: require.resolve(`./src/templates/category`),
      context: {
        id: category.id,
      },
    });
  });

  data.allProduct.nodes.forEach((product) => {
    actions.createPage({
      path: product.slug,
      component: require.resolve(`./src/templates/product`),
      context: {
        id: product.id,
      },
    });
  });
};
